{
    "cells": [
        {
            "source": [
                "#### New to Plotly?\n",
                "Plotly's Python library is free and open source! [Get started](https://plot.ly/python/getting-started/) by downloading the client and [reading the primer](https://plot.ly/python/getting-started/).\n",
                "<br>You can set up Plotly to work in [online](https://plot.ly/python/getting-started/#initialization-for-online-plotting) or [offline](https://plot.ly/python/getting-started/#initialization-for-offline-plotting) mode, or in [jupyter notebooks](https://plot.ly/python/getting-started/#start-plotting-online).\n",
                "<br>We also have a quick-reference [cheatsheet](https://images.plot.ly/plotly-documentation/images/python_cheat_sheet.pdf) (new!) to help you get started!"
            ],
            "metadata": {},
            "cell_type": "markdown"
        },
        {
            "source": [
                "#### Version Check\n",
                "Plotly's Python package is updated frequently. Run `pip install plotly --upgrade` to make sure you're using the latest version. "
            ],
            "metadata": {},
            "cell_type": "markdown"
        },
        {
            "source": [
                "import plotly\n",
                "plotly.__version__"
            ],
            "outputs": [
                {
                    "data": {
                        "text/plain": [
                            "'3.4.2'"
                        ]
                    },
                    "metadata": {},
                    "output_type": "execute_result",
                    "execution_count": 1
                }
            ],
            "metadata": {},
            "cell_type": "code",
            "execution_count": 1
        },
        {
            "source": [
                "#### Mapbox Access Token\n",
                "\n",
                "To plot on Mapbox maps with Plotly you'll need a Mapbox account and a public [Mapbox Access Token](https://www.mapbox.com/studio) which you can add to your [Plotly settings](https://plot.ly/settings/mapbox). If you're using a Plotly On-Premise server, please see additional instructions here: https://help.plot.ly/mapbox-atlas/. "
            ],
            "metadata": {},
            "cell_type": "markdown"
        },
        {
            "source": [
                "#### Basic Example"
            ],
            "metadata": {},
            "cell_type": "markdown"
        },
        {
            "source": [
                "import plotly.plotly as py\n",
                "import plotly.graph_objs as go\n",
                "\n",
                "# mapbox_access_token = 'ADD_YOUR_TOKEN_HERE'\n",
                "\n",
                "data = [\n",
                "    go.Scattermapbox(\n",
                "        lat=['45.5017'],\n",
                "        lon=['-73.5673'],\n",
                "        mode='markers',\n",
                "        marker=dict(\n",
                "            size=14\n",
                "        ),\n",
                "        text=['Montreal'],\n",
                "    )\n",
                "]\n",
                "\n",
                "layout = go.Layout(\n",
                "    autosize=True,\n",
                "    hovermode='closest',\n",
                "    mapbox=dict(\n",
                "        accesstoken=mapbox_access_token,\n",
                "        bearing=0,\n",
                "        center=dict(\n",
                "            lat=45,\n",
                "            lon=-73\n",
                "        ),\n",
                "        pitch=0,\n",
                "        zoom=5\n",
                "    ),\n",
                ")\n",
                "\n",
                "fig = dict(data=data, layout=layout)\n",
                "\n",
                "py.iplot(fig, filename='Montreal Mapbox')"
            ],
            "outputs": [
                {
                    "data": {
                        "text/html": [
                            "<iframe id=\"igraph\" scrolling=\"no\" style=\"border:none;\" seamless=\"seamless\" src=\"https://plot.ly/~PythonPlotBot/773.embed\" height=\"525px\" width=\"100%\"></iframe>"
                        ],
                        "text/plain": [
                            "<plotly.tools.PlotlyDisplay object>"
                        ]
                    },
                    "metadata": {},
                    "output_type": "execute_result",
                    "execution_count": 2
                }
            ],
            "metadata": {},
            "cell_type": "code",
            "execution_count": 2
        },
        {
            "source": [
                "#### Multiple Markers"
            ],
            "metadata": {},
            "cell_type": "markdown"
        },
        {
            "source": [
                "import plotly.plotly as py\n",
                "import plotly.graph_objs as go\n",
                "\n",
                "# mapbox_access_token = 'ADD_YOUR_TOKEN_HERE'\n",
                "\n",
                "data = [\n",
                "    go.Scattermapbox(\n",
                "        lat=['38.91427','38.91538','38.91458',\n",
                "             '38.92239','38.93222','38.90842',\n",
                "             '38.91931','38.93260','38.91368',\n",
                "             '38.88516','38.921894','38.93206',\n",
                "             '38.91275'],\n",
                "        lon=['-77.02827','-77.02013','-77.03155',\n",
                "             '-77.04227','-77.02854','-77.02419',\n",
                "             '-77.02518','-77.03304','-77.04509',\n",
                "             '-76.99656','-77.042438','-77.02821',\n",
                "             '-77.01239'],\n",
                "        mode='markers',\n",
                "        marker=dict(\n",
                "            size=9\n",
                "        ),\n",
                "        text=[\"The coffee bar\",\"Bistro Bohem\",\"Black Cat\",\n",
                "             \"Snap\",\"Columbia Heights Coffee\",\"Azi's Cafe\",\n",
                "             \"Blind Dog Cafe\",\"Le Caprice\",\"Filter\",\n",
                "             \"Peregrine\",\"Tryst\",\"The Coupe\",\n",
                "             \"Big Bear Cafe\"],\n",
                "    )\n",
                "]\n",
                "\n",
                "layout = go.Layout(\n",
                "    autosize=True,\n",
                "    hovermode='closest',\n",
                "    mapbox=dict(\n",
                "        accesstoken=mapbox_access_token,\n",
                "        bearing=0,\n",
                "        center=dict(\n",
                "            lat=38.92,\n",
                "            lon=-77.07\n",
                "        ),\n",
                "        pitch=0,\n",
                "        zoom=10\n",
                "    ),\n",
                ")\n",
                "\n",
                "fig = dict(data=data, layout=layout)\n",
                "py.iplot(fig, filename='Multiple Mapbox')"
            ],
            "outputs": [
                {
                    "data": {
                        "text/html": [
                            "<iframe id=\"igraph\" scrolling=\"no\" style=\"border:none;\" seamless=\"seamless\" src=\"https://plot.ly/~PythonPlotBot/775.embed\" height=\"525px\" width=\"100%\"></iframe>"
                        ],
                        "text/plain": [
                            "<plotly.tools.PlotlyDisplay object>"
                        ]
                    },
                    "metadata": {},
                    "output_type": "execute_result",
                    "execution_count": 3
                }
            ],
            "metadata": {},
            "cell_type": "code",
            "execution_count": 3
        },
        {
            "source": [
                "#### Nuclear Waste Sites on Campuses"
            ],
            "metadata": {},
            "cell_type": "markdown"
        },
        {
            "source": [
                "import plotly.plotly as py\n",
                "import plotly.graph_objs as go\n",
                "\n",
                "import pandas as pd\n",
                "\n",
                "# mapbox_access_token = 'ADD_YOUR_TOKEN_HERE'\n",
                "\n",
                "df = pd.read_csv('https://raw.githubusercontent.com/plotly/datasets/master/Nuclear%20Waste%20Sites%20on%20American%20Campuses.csv')\n",
                "site_lat = df.lat\n",
                "site_lon = df.lon\n",
                "locations_name = df.text\n",
                "\n",
                "data = [\n",
                "    go.Scattermapbox(\n",
                "        lat=site_lat,\n",
                "        lon=site_lon,\n",
                "        mode='markers',\n",
                "        marker=dict(\n",
                "            size=17,\n",
                "            color='rgb(255, 0, 0)',\n",
                "            opacity=0.7\n",
                "        ),\n",
                "        text=locations_name,\n",
                "        hoverinfo='text'\n",
                "    ),\n",
                "    go.Scattermapbox(\n",
                "        lat=site_lat,\n",
                "        lon=site_lon,\n",
                "        mode='markers',\n",
                "        marker=dict(\n",
                "            size=8,\n",
                "            color='rgb(242, 177, 172)',\n",
                "            opacity=0.7\n",
                "        ),\n",
                "        hoverinfo='none'\n",
                "    )]\n",
                "        \n",
                "layout = go.Layout(\n",
                "    title='Nuclear Waste Sites on Campus',\n",
                "    autosize=True,\n",
                "    hovermode='closest',\n",
                "    showlegend=False,\n",
                "    mapbox=dict(\n",
                "        accesstoken=mapbox_access_token,\n",
                "        bearing=0,\n",
                "        center=dict(\n",
                "            lat=38,\n",
                "            lon=-94\n",
                "        ),\n",
                "        pitch=0,\n",
                "        zoom=3,\n",
                "        style='light'\n",
                "    ),\n",
                ")\n",
                "\n",
                "fig = dict(data=data, layout=layout)\n",
                "py.iplot(fig, filename='Nuclear Waste Sites on American Campuses')"
            ],
            "outputs": [
                {
                    "data": {
                        "text/html": [
                            "<iframe id=\"igraph\" scrolling=\"no\" style=\"border:none;\" seamless=\"seamless\" src=\"https://plot.ly/~PythonPlotBot/777.embed\" height=\"525px\" width=\"100%\"></iframe>"
                        ],
                        "text/plain": [
                            "<plotly.tools.PlotlyDisplay object>"
                        ]
                    },
                    "metadata": {},
                    "output_type": "execute_result",
                    "execution_count": 4
                }
            ],
            "metadata": {},
            "cell_type": "code",
            "execution_count": 4
        },
        {
            "source": [
                "#### Reference\n",
                "See https://plot.ly/python/reference/#scattermapbox for more information and options!"
            ],
            "metadata": {},
            "cell_type": "markdown"
        },
        {
            "source": [],
            "outputs": [],
            "metadata": {},
            "cell_type": "code",
            "execution_count": null
        }
    ],
    "metadata": {
        "kernelspec": {
            "name": "python2",
            "language": "python",
            "display_name": "Python 2"
        },
        "language_info": {
            "name": "python",
            "version": "2.7.14",
            "mimetype": "text/x-python",
            "file_extension": ".py",
            "pygments_lexer": "ipython2",
            "codemirror_mode": {
                "name": "ipython",
                "version": 2
            },
            "nbconvert_exporter": "python"
        },
        "anaconda-cloud": {}
    },
    "nbformat": 4,
    "nbformat_minor": 1
}